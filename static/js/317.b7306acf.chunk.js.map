{"version":3,"file":"static/js/317.b7306acf.chunk.js","mappings":"kLAKMA,EAAU,mCAAG,WAAOC,EAAOC,GAAd,uFACMC,EAAAA,EAAAA,IAAA,UAHb,iCAGa,OACZF,EADY,oBAJb,mCAIa,kBACkBC,IAFxB,cACXE,EADW,yBAIVA,EAASC,MAJC,2CAAH,wDAOhB,K,2FCVaC,EAAS,WAClB,OACA,SAAC,KAAD,CACFC,MAAM,MACNC,MAAM,WAGP,C,4HCRD,EAA8B,6B,oECMxBC,EAAU,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACOC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBN,OAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAG,mCAAG,WAAMC,GAAN,iGAEerB,EAAAA,EAAAA,GAAW,SAAD,OAAUiB,EAAV,gBAFzB,OAEFb,EAFE,OAGAQ,EAAWR,EAASkB,SAHpB,gDAKRR,EAAS,CAAED,MAAK,OALR,yBAORG,GAAa,GAPL,4EAAH,sDAUTI,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAU,uBAAG,yCACM,IAAnBF,EAAQY,SAAgB,uBAAG,yCAC3BR,GACC,SAAC,IAAD,KACA,eAAIS,UAAWC,EAAf,SACGd,EAAQe,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,yBAAG,WAASD,MACZ,uBAAIC,MAFGP,EADE,QAUtB,EACF,IAEAZ,EAAQoB,UAAY,CAClBF,OAAQG,IAAAA,OACRT,GAAIS,IAAAA,OACJF,QAASE,IAAAA,OACTf,UAAWe,IAAAA,KACXjB,MAAOiB,IAAAA,OACPnB,QAASmB,IAAAA,M,mCC9CX,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPL,CAQF,CAED,SAASG,IACP,OAAOV,CACR,CAHDA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBpC,EAChBC,kBAAmBF,GAKrB,OAFAiB,EAAepB,UAAYoB,EAEpBA,CACR,C,uBC/CCd,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["Servises/servises.jsx","components/Loader/loader.jsx","webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/reviews.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = '1e9768f515bbeb1d217569014504939a';\nconst url = 'https://api.themoviedb.org/3/';\n\nconst FetchMovie = async (query, queryParams) => {\n  const response = await axios.get(\n    `${url}${query}?api_key=${api}&query=${queryParams}`\n  );\n  return response.data;\n};\n\nexport default FetchMovie;\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n    <InfinitySpin\n  width='200'\n  color=\"#4fa94d\"\n/>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"riviewsList\":\"reviews_riviewsList__T8TYj\"};","import css from '../Reviews/reviews.module.css';\n import { useState, useEffect } from 'react';\n import { useParams } from 'react-router-dom';\n import FetchMovie from 'Servises/servises';\nimport { Loader } from '../Loader/loader';\nimport PropTypes from 'prop-types';\n \nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {movieId } = useParams();\n\n\n   useEffect(() => {\n     setIsLoading(true);\n     const Foo = async id => {\n       try {\n         const response = await FetchMovie(`movie/${movieId}/reviews`, ``);\n                 setReviews(response.results);\n       } catch (error) {\n         setError({ error });\n       } finally {\n         setIsLoading(false);\n       }\n     };\n     Foo();\n   }, [movieId]);\n\n   return (\n     <>\n       {error &&  <p>We don't have reviews for this movie</p>}\n       {reviews.length === 0 && <p>We don't have reviews for this movie</p>}\n       {isLoading ?\n         <Loader /> :\n         <ul className={css.riviewsList}>\n           {reviews.map(({ id, author, content }) => (\n             <li key={id}>\n               <p>Author: {author}</p>\n               <p>{content}</p>\n             </li>\n           ))}\n         </ul>\n       }\n     </>\n   );\n };\nexport default Reviews;\n\nReviews.prototype = {\n  author: PropTypes.string,\n  id: PropTypes.number,\n  content: PropTypes.string,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  reviews: PropTypes.array,\n  };","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["FetchMovie","query","queryParams","axios","response","data","Loader","width","color","Reviews","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","Foo","id","results","length","className","css","map","author","content","prototype","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}