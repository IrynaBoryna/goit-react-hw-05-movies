{"version":3,"file":"static/js/110.2a43535e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Pages/Movies/movies.module.css?a6b8","webpack://react-homework-template/./src/components/Searchbar/searchbar.module.css?5778","components/Searchbar/searchbar.jsx","Pages/Movies/movies.jsx","Servises/servises.jsx","components/Loader/loader.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trendingList\":\"movies_trendingList__QKPFF\",\"moviesList\":\"movies_moviesList__izc96\",\"list\":\"movies_list__+aHcv\"};","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"searchbar_SearchForm__s5QkV\",\"SearchButton\":\"searchbar_SearchButton__lpFer\",\"SearchFormInput\":\"searchbar_SearchFormInput__0k1XT\"};","import css from './searchbar.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Seachbar = ({onSubmit}) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = evt => {\n    setQuery(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleInputSubmit = evt => {\n    evt.preventDefault();\n    if (query.trim() === '') {\n      return alert('Enter your request');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={css.SearchForm} onSubmit={handleInputSubmit}>\n      <input\n        className={css.SearchFormInput}\n        type=\"text\"\n        placeholder=\"\"\n        name=\"query\"\n        value={query}\n        onChange={handleInputChange}\n      />\n      \n        <button type=\"submit\" className={css.SearchButton}>\n          <span className={css.SearchButtonText}> Search</span>\n        </button>\n    </form>\n  );\n};\n\nexport default Seachbar;\n\nSeachbar.prototype = {\n    query: PropTypes.string,\n  };","import css from './movies.module.css';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/loader';\nimport FetchMovie from 'Servises/servises';\nimport Searchbar from 'components/Searchbar/searchbar';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const  location  = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const searchQuery = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    const Foo = async () => {\n      setIsLoading(true);\n      try {\n        const response = await FetchMovie(`search/movie`, searchQuery);\n        setMoviesSearch(response.results);\n      } catch (error) {\n        setError({ error });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    Foo();\n  }, [searchQuery]);\n\n  const updateQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    setQuery(Object.values(nextParams));\n  };\n\n  return (\n    <>\n      <Searchbar value={query} onSubmit={updateQuery} />\n      {error && <p>something went wrong...</p>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={css.moviesList}>\n          {moviesSearch.map(({ id, title }) => (\n            <li key={id}>\n              <Link\n                className={css.list}\n                to={`${id}`}\n                state={{ from: location }}\n              >\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;\n\nMovies.prototype = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n  moviesSearch: PropTypes.array,\n  query: PropTypes.string,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst api = '1e9768f515bbeb1d217569014504939a';\nconst url = 'https://api.themoviedb.org/3/';\n\nconst FetchMovie = async (query, queryParams) => {\n  const response = await axios.get(\n    `${url}${query}?api_key=${api}&query=${queryParams}`\n  );\n  return response.data;\n};\n\nexport default FetchMovie;\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n    <InfinitySpin\n  width='200'\n  color=\"#4fa94d\"\n/>\n    )\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Seachbar","onSubmit","useState","query","setQuery","className","css","evt","preventDefault","trim","alert","type","placeholder","name","value","onChange","currentTarget","toLowerCase","prototype","PropTypes","Movies","moviesSearch","setMoviesSearch","error","setError","isLoading","setIsLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","Foo","FetchMovie","response","results","nextParams","Object","values","map","id","title","to","state","from","queryParams","axios","data","Loader","width","color","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}