{"version":3,"file":"static/js/523.7d013d60.chunk.js","mappings":"8KAKMA,EAAU,mCAAG,WAAOC,EAAOC,GAAd,uFACMC,EAAAA,EAAAA,IAAA,UAHb,iCAGa,OACZF,EADY,oBAJb,mCAIa,kBACkBC,IAFxB,cACXE,EADW,yBAIVA,EAASC,MAJC,2CAAH,wDAOhB,K,4ECVaC,EAAS,WAClB,OACA,SAAC,KAAD,CACFC,MAAM,MACNC,MAAM,WAGP,C,2GCRD,GAAgB,UAAY,gCAAgC,eAAiB,qCAAqC,OAAS,6BAA6B,MAAQ,6B,qDCuEhK,EAjEqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAM,qBADKC,EAAAA,EAAAA,MACOC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAEvCC,EAAAA,EAAAA,YAAU,WACRT,GAAa,GACb,IAAMU,EAAG,mCAAG,WAAMC,GAAN,iGAEe1B,EAAAA,EAAAA,GAAW,SAAD,OAAUkB,GAAV,IAFzB,OAEFd,EAFE,OAGRO,EAASP,GACTa,EAAU,CAACb,EAASY,OAAOW,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,QAJ/C,gDAMRjB,EAAS,CAAED,MAAK,OANR,yBAQRG,GAAa,GARL,4EAAH,sDAWTU,GACD,GAAE,CAACP,IAEJ,IAAIa,GAAmC,GAArBrB,EAAMsB,cAAmBC,QAAQ,GAEnD,OACE,iCACE,SAAC,KAAD,CAAMC,GAAId,EAAV,SAAkB,cACjBR,IAAS,uBAAG,4BACZE,GACC,SAAC,IAAD,KAEA,iBAAoBqB,UAAWC,EAAAA,UAA/B,WACE,gBACEC,IAAG,0CAAqC3B,EAAM4B,aAC9CC,IAAK7B,EAAM8B,SAEb,4BACE,eAAIL,UAAWC,EAAAA,WAAf,SAAgC1B,EAAM8B,SACtC,eAAGL,UAAWC,EAAAA,eAAd,UAAkC,eAAaL,EAAW,SAC1D,cAAGI,UAAWC,EAAAA,eAAd,SAAkC,cAClC,cAAGD,UAAWC,EAAAA,UAAd,SAA8B1B,EAAM+B,YACpC,cAAGN,UAAWC,EAAAA,eAAd,SAAkC,YAClC,cAAGD,UAAWC,EAAAA,eAAd,SAAmCpB,SAX7BN,EAAMgB,KAelB,2BACE,yBACE,SAAC,KAAD,CAAMQ,GAAG,OAAT,SAAgB,UADTxB,EAAMgB,KAGf,yBACE,SAAC,KAAD,CAAqBQ,GAAG,UAAxB,SAAkC,WAAvBxB,EAAMgB,UAKrB,SAAC,EAAAgB,SAAD,CAAUC,UAAU,yBAAK,uBAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["Servises/servises.jsx","components/Loader/loader.jsx","webpack://react-homework-template/./src/components/MovieDetails/movieDetails.module.css?f136","components/MovieDetails/movieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api = '1e9768f515bbeb1d217569014504939a';\nconst url = 'https://api.themoviedb.org/3/';\n\nconst FetchMovie = async (query, queryParams) => {\n  const response = await axios.get(\n    `${url}${query}?api_key=${api}&query=${queryParams}`\n  );\n  return response.data;\n};\n\nexport default FetchMovie;\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n    <InfinitySpin\n  width='200'\n  color=\"#4fa94d\"\n/>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"movieDetails_movieCard__RfOW0\",\"movieDataTitle\":\"movieDetails_movieDataTitle__4D29I\",\"button\":\"movieDetails_button__pnWLJ\",\"hover\":\"movieDetails_hover__srOep\"};","import css from './movieDetails.module.css';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport FetchMovie from 'Servises/servises';\nimport { Loader } from '../Loader/loader';\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backTo = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const Foo = async id => {\n      try {\n        const response = await FetchMovie(`movie/${movieId}`, ``);\n        setMovie(response);\n        setGenres([response.genres.map(item => item.name).join(', ')]);\n      } catch (error) {\n        setError({ error });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    Foo();\n  }, [movieId]);\n\n  let percentage = (movie.vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      <Link to={backTo}> Go back </Link>\n      {error && <p>something went wrong...</p>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div key={movie.id} className={css.movieCard}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div>\n            <h2 className={css.movieTitle}>{movie.title}</h2>\n            <p className={css.movieDataTitle}>User Score: {percentage}% </p>\n            <p className={css.movieDataTitle}>Overview</p>\n            <p className={css.movieData}>{movie.overview}</p>\n            <p className={css.movieDataTitle}>Genres</p>\n            <p className={css.movieDataTitle}>{genres}</p>\n          </div>\n        </div>\n      )}\n      <ul>\n        <li key={movie.id}>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link key={movie.id} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["FetchMovie","query","queryParams","axios","response","data","Loader","width","color","useState","movie","setMovie","error","setError","isLoading","setIsLoading","genres","setGenres","movieId","useParams","backTo","useLocation","state","from","useEffect","Foo","id","map","item","name","join","percentage","vote_average","toFixed","to","className","css","src","poster_path","alt","title","overview","Suspense","fallback"],"sourceRoot":""}