{"version":3,"file":"static/js/317.71128cbd.chunk.js","mappings":"8KAKMA,EAAU,mCAAG,WAAOC,EAAOC,GAAd,uFACMC,EAAAA,EAAAA,IAAA,UAHb,iCAGa,OACZF,EADY,oBAJb,mCAIa,kBACkBC,IAFxB,cACXE,EADW,yBAIVA,EAASC,MAJC,2CAAH,wDAOhB,K,4ECVaC,EAAS,WAClB,OACA,SAAC,KAAD,CACFC,MAAM,MACNC,MAAM,WAGP,C,2GCRD,EAA8B,6B,6CC6C9B,EAxCiB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAG,mCAAG,WAAMC,GAAN,iGAEepB,EAAAA,EAAAA,GAAW,SAAD,OAAUgB,EAAV,gBAFzB,OAEFZ,EAFE,OAGAO,EAAWP,EAASiB,SAHpB,gDAKRR,EAAS,CAAED,MAAK,OALR,yBAORG,GAAa,GAPL,4EAAH,sDAUTI,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAU,uBAAG,yCACM,IAAnBF,EAAQY,SAAgB,uBAAG,yCAC3BR,GACC,SAAC,IAAD,KACA,eAAIS,UAAWC,EAAf,SACGd,EAAQe,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,yBAAG,WAASD,MACZ,uBAAIC,MAFGP,EADE,QAUtB,C","sources":["Servises/servises.jsx","components/Loader/loader.jsx","webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api = '1e9768f515bbeb1d217569014504939a';\nconst url = 'https://api.themoviedb.org/3/';\n\nconst FetchMovie = async (query, queryParams) => {\n  const response = await axios.get(\n    `${url}${query}?api_key=${api}&query=${queryParams}`\n  );\n  return response.data;\n};\n\nexport default FetchMovie;\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n    <InfinitySpin\n  width='200'\n  color=\"#4fa94d\"\n/>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"riviewsList\":\"reviews_riviewsList__T8TYj\"};","import css from '../Reviews/reviews.module.css';\n import { useState, useEffect } from 'react';\n import { useParams } from 'react-router-dom';\n import FetchMovie from 'Servises/servises';\nimport { Loader } from '../Loader/loader';\n \n const Reviews = () => {\n   const [reviews, setReviews] = useState([]);\n   const [error, setError] = useState(null);\n   const [isLoading, setIsLoading] = useState(false);\n   const { movieId } = useParams();\n\n\n   useEffect(() => {\n     setIsLoading(true);\n     const Foo = async id => {\n       try {\n         const response = await FetchMovie(`movie/${movieId}/reviews`, ``);\n                 setReviews(response.results);\n       } catch (error) {\n         setError({ error });\n       } finally {\n         setIsLoading(false);\n       }\n     };\n     Foo();\n   }, [movieId]);\n\n   return (\n     <>\n       {error &&  <p>We don't have reviews for this movie</p>}\n       {reviews.length === 0 && <p>We don't have reviews for this movie</p>}\n       {isLoading ?\n         <Loader /> :\n         <ul className={css.riviewsList}>\n           {reviews.map(({ id, author, content }) => (\n             <li key={id}>\n               <p>Author: {author}</p>\n               <p>{content}</p>\n             </li>\n           ))}\n         </ul>\n       }\n     </>\n   );\n };\nexport default Reviews;"],"names":["FetchMovie","query","queryParams","axios","response","data","Loader","width","color","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","Foo","id","results","length","className","css","map","author","content"],"sourceRoot":""}