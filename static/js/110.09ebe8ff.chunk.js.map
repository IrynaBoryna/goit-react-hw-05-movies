{"version":3,"file":"static/js/110.09ebe8ff.chunk.js","mappings":"2NACA,EAAyE,2BAAzE,EAA2G,qB,mCCA3G,GAAgB,WAAa,8BAA8B,aAAe,gCAAgC,gBAAkB,oC,SCmC5H,EAjCiB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAClB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,kBAAMC,UAAWC,EAAAA,WAAgBL,SAVT,SAAAM,GAExB,GADAA,EAAIC,iBACiB,KAAjBL,EAAMM,OACR,OAAOC,MAAM,sBAEfN,EAAS,IACTH,EAASE,EACV,EAGC,WACE,kBACEE,UAAWC,EAAAA,gBACXK,KAAK,OACLC,YAAY,GACZC,KAAK,QACLC,MAAOX,EACPY,SArBoB,SAAAR,GACxBH,EAASG,EAAIS,cAAcF,MAAMG,cAClC,KAqBG,mBAAQN,KAAK,SAASN,UAAWC,EAAAA,aAAjC,UACE,iBAAMD,UAAWC,EAAAA,iBAAjB,SAAuC,gBAI9C,ECiBD,EA5Ce,WACb,OAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOgB,EAAP,KAAqBC,EAArB,KACA,GAA0BjB,EAAAA,EAAAA,UAAS,MAAnC,eAAOkB,EAAP,KAAcC,EAAd,KACA,GAAkCnB,EAAAA,EAAAA,WAAS,GAA3C,eAAOoB,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVrB,EAAJ,CAGA,IAAMsB,EAAG,mCAAG,2FACVF,GAAa,GADH,mBAGeG,EAAAA,EAAAA,GAAW,eAAD,UAAoBvB,IAH7C,OAGFwB,EAHE,OAIRR,EAAgBQ,EAASC,SAJjB,gDAMRP,EAAS,CAAED,MAAK,OANR,yBAQRG,GAAa,GARL,4EAAH,qDAWTE,GAZC,CAaF,GAAE,CAACtB,KAGF,iCACE,SAAC,EAAD,CAAWF,SAAU,SAAAE,GAAK,OAAIC,EAASD,EAAb,IACzBiB,IAAS,uBAAG,4BACZE,GACC,SAAC,IAAD,KAEA,eAAIjB,UAAWC,EAAf,SACGY,EAAaW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAChB,yBACE,SAAC,KAAD,CAAM1B,UAAWC,EAAmB0B,GAAE,UAAKF,GAA3C,SACGC,GAD6BD,IADzBA,EADO,QAW3B,C,8DC7CKJ,EAAU,mCAAG,WAAOvB,EAAO8B,GAAd,uFACMC,EAAAA,EAAAA,IAAA,UAHb,iCAGa,OACZ/B,EADY,oBAJb,mCAIa,kBACkB8B,IAFxB,cACXN,EADW,yBAIVA,EAASQ,MAJC,2CAAH,wDAOhB,K,4ECVaC,EAAS,WAClB,OACA,SAAC,KAAD,CACFC,MAAM,MACNC,MAAM,WAGP,C","sources":["webpack://react-homework-template/./src/Pages/Movies/movies.module.css?a6b8","webpack://react-homework-template/./src/components/Searchbar/searchbar.module.css?5778","components/Searchbar/searchbar.jsx","Pages/Movies/movies.jsx","Servises/servises.jsx","components/Loader/loader.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trendingList\":\"movies_trendingList__QKPFF\",\"moviesList\":\"movies_moviesList__izc96\",\"list\":\"movies_list__+aHcv\"};","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"searchbar_SearchForm__s5QkV\",\"SearchButton\":\"searchbar_SearchButton__lpFer\",\"SearchFormInput\":\"searchbar_SearchFormInput__0k1XT\"};","import css from './searchbar.module.css';\nimport { useState } from 'react';\n\nconst Seachbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = evt => {\n    setQuery(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleInputSubmit = evt => {\n    evt.preventDefault();\n    if (query.trim() === '') {\n      return alert('Enter your request');\n    }\n    setQuery('');\n    onSubmit(query);\n  };\n\n  return (\n    <form className={css.SearchForm} onSubmit={handleInputSubmit}>\n      <input\n        className={css.SearchFormInput}\n        type=\"text\"\n        placeholder=\"\"\n        name=\"query\"\n        value={query}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\" className={css.SearchButton}>\n        <span className={css.SearchButtonText}> Search</span>\n      </button>\n    </form>\n  );\n};\n\nexport default Seachbar;\n","import css from './movies.module.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/loader';\nimport FetchMovie from 'Servises/servises';\nimport Searchbar from 'components/Searchbar/searchbar';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const Foo = async () => {\n      setIsLoading(true);\n      try {\n        const response = await FetchMovie(`search/movie`, `${query}`);\n        setMoviesSearch(response.results);\n      } catch (error) {\n        setError({ error });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    Foo();\n  }, [query]);\n\n  return (\n    <>\n      <Searchbar onSubmit={query => setQuery(query)} />\n      {error && <p>something went wrong...</p>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={css.moviesList}>\n          {moviesSearch.map(({ id, title }) => (\n            <li key={id}>\n              <Link className={css.list} key={id} to={`${id}`}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst api = '1e9768f515bbeb1d217569014504939a';\nconst url = 'https://api.themoviedb.org/3/';\n\nconst FetchMovie = async (query, queryParams) => {\n  const response = await axios.get(\n    `${url}${query}?api_key=${api}&query=${queryParams}`\n  );\n  return response.data;\n};\n\nexport default FetchMovie;\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n    <InfinitySpin\n  width='200'\n  color=\"#4fa94d\"\n/>\n    )\n}"],"names":["onSubmit","useState","query","setQuery","className","css","evt","preventDefault","trim","alert","type","placeholder","name","value","onChange","currentTarget","toLowerCase","moviesSearch","setMoviesSearch","error","setError","isLoading","setIsLoading","useEffect","Foo","FetchMovie","response","results","map","id","title","to","queryParams","axios","data","Loader","width","color"],"sourceRoot":""}